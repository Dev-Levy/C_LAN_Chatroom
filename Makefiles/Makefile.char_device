# Makefile for char_device kernel module

# Define paths
SRC_DIR := ../src
BUILD_DIR := ../build/char_device/
KERNEL_DIR := /lib/modules/$(shell uname -r)/build
PWD := $(shell pwd)

# Create build directory
$(shell mkdir -p $(BUILD_DIR))

# We'll create a temporary Makefile in the build directory
define KBUILD_CONTENT
obj-m := char_device.o
all:
	cp $(PWD)/$(SRC_DIR)/char_device.c ./
	cp $(PWD)/$(SRC_DIR)/char_device.h ./
	cp $(PWD)/$(SRC_DIR)/model.h ./
	$(MAKE) -C $(KERNEL_DIR) M=$(PWD)/$(BUILD_DIR) modules
clean:
	$(MAKE) -C $(KERNEL_DIR) M=$(PWD)/$(BUILD_DIR) clean
endef
export KBUILD_CONTENT

all:
	@echo "$$KBUILD_CONTENT" > $(BUILD_DIR)/Makefile
	$(MAKE) -C $(BUILD_DIR)

clean:
	$(MAKE) -C $(BUILD_DIR) clean || true
	rm -r $(BUILD_DIR)

install:
	$(MAKE) -C $(KERNEL_DIR) M=$(PWD)/$(BUILD_DIR) modules_install
	depmod -a

uninstall:
	rm -f /lib/modules/$(shell uname -r)/extra/char_device.ko
	depmod -a

.PHONY: all clean install uninstall
